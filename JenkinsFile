pipeline {
    agent any

    environment {
        // Set environment variables like Docker image name and S3 bucket for backup
        DOCKER_IMAGE = 'my-application:latest'
        AWS_CREDENTIALS_ID = 'aws-credentials-id'  // Jenkins AWS credentials ID
        EC2_INSTANCE_IP = 'ec2-instance-ip'
        S3_BUCKET_NAME = 'my-jenkins-backup-bucket'
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Checking out code...'
                git branch: 'main', url: 'https://github.com/your-repo.git'
            }
        }

        stage('Test Code') {
            steps {
                echo 'Running tests...'
                sh 'mvn test'  // Example for a Maven project, adjust for your stack
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Deploy to EC2') {
            steps {
                echo 'Deploying application to EC2...'
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                    sh """
                    scp -i $SSH_KEY Dockerfile ec2-user@$EC2_INSTANCE_IP:/home/ec2-user/
                    ssh -i $SSH_KEY ec2-user@$EC2_INSTANCE_IP << EOF
                        docker stop my-application || true
                        docker rm my-application || true
                        docker run -d --name my-application -p 8080:8080 $DOCKER_IMAGE
                    EOF
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
